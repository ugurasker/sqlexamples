/*==================== SET OPERATORLERI: UNION, UNION ALL======================
    
    UNION, UNION ALL, INTERSECT, ve MINUS gibi SET operatorleri yardimiyla  
    Çoklu Sorgular birlestirilebilirler.
    UNION :  Bir SET operatorudur. 2 veya daha fazla Sorgu ifadesinin sonuc 
    kumelerini birlesitirerek tek bir sonuc kumesi olusturur.    
   
    NOT:  Birle?ik olan olan Sorgu ifadesinin veri türü di?er sorgulardaki 
    ifadelerin veri türü ile uyumlu olmal?d?r.
    
    Syntax:
    ----------
    SELECT sutun_adi,sutun_adi2, .. FROM tablo_adi1
    UNION
    SELECT sutun_adi1, sutun_adi2, .. FROM tablo_adi2;
    
    NOT: UNION operatoru SADECE benzersi degerleri al?r. Benzerli verileri almak
    için UNION ALL kullan?l?r.
==============================================================================*/
CREATE TABLE persone 
    (
        id NUMBER(9), 
        isim VARCHAR2(50), 
        sehir VARCHAR2(50), 
        maas NUMBER(20), 
        sirket VARCHAR2(20),
        CONSTRAINT persone_pk PRIMARY KEY(id)
    );
    
    INSERT INTO persone VALUES(123456789, 'Ali Yilmaz', 'Istanbul', 5500, 'Honda');
    INSERT INTO persone VALUES(234567890, 'Veli Sahin', 'Istanbul', 4500, 'Toyota');
    INSERT INTO persone VALUES(345678901, 'Mehmet Ozturk', 'Ankara', 3500, 'Honda'); 
    INSERT INTO persone VALUES(456789012, 'Mehmet Ozturk', 'Izmir', 6000, 'Ford');
    INSERT INTO persone VALUES(567890123, 'Mehmet Ozturk', 'Ankara', 7000, 'Tofas');
    INSERT INTO persone VALUES(453445611, 'Veli Sahin', 'Ankara', 4500, 'Ford');
    INSERT INTO persone VALUES(123456710, 'Hatice Sahin','Bursa', 4200, 'Honda');
    
    SELECT * FROM persone;
    DROP TABLE persone;
    /* -----------------------------------------------------------------------------
  ORNEK1: Maasi 4000’den cok olan isci isimlerini ve 5000 liradan fazla maas
  alinan sehirleri gosteren sorguyu yaziniz
------------------------------------------------------------------------------*/
SELECT isim FROM persone
   WHERE maas>4000
   UNION
   SELECT sehir FROM persone
   WHERE maas>5000;
   /* -----------------------------------------------------------------------------
  ORNEK2: Maasi 4000’den cok olan isci isimlerini ve 5000 liradan fazla maas
  alinan sehirleri gosteren sorguyu Tekrarl? verileri de gösterecek ?ekilde
  yaziniz.
------------------------------------------------------------------------------*/
SELECT isim FROM persone
   WHERE maas>4000
   UNION ALL
   SELECT sehir FROM persone
   WHERE maas>5000;
/* -----------------------------------------------------------------------------
  ORNEK3: Mehmet Ozturk ismindeki kisilerin aldigi maaslari ve Istanbul’daki
  personelin maaslarini yüksekten aça?a do?ru s?ralayarak bir tabloda gosteren
  sorguyu yaziniz.   
------------------------------------------------------------------------------*/
   SELECT maas, isim as isim_veya_sehir
   FROM persone
   WHERE isim= 'Mehmet Ozturk'
   UNION 
   SELECT maas, sehir FROM persone
   WHERE sehir='Istanbul'
   ORDER BY maas DESC;
   
/*======================== FARKLI TABLOLARDAN BIRLESTIRME ====================*/   
    
    CREATE TABLE personel_bilgi 
    (
        id NUMBER(9), 
        tel char(10) UNIQUE , 
        cocuk_sayisi NUMBER(2), 
        CONSTRAINT fk_persone FOREIGN KEY (id) REFERENCES persone(id) 
    ); 
    
    INSERT INTO personel_bilgi VALUES(123456789, '5302345678' , 5);
    INSERT INTO personel_bilgi VALUES(234567890, '5422345678', 4);
    INSERT INTO personel_bilgi VALUES(345678901, '5354561245', 3); 
    INSERT INTO personel_bilgi VALUES(456789012, '5411452659', 3);
    INSERT INTO personel_bilgi VALUES(567890123, '5551253698', 2);
    INSERT INTO personel_bilgi VALUES(453445611, '5524578574', 2);
    INSERT INTO personel_bilgi VALUES(123456710, '5537488585', 1);

    SELECT * FROM personel_bilgi;
    DROP TABLE personel_bilgi;

/* -----------------------------------------------------------------------------
  ORNEK4: id’si 123456789 olan personelin Personel tablosundan sehir ve 
  maasini, personel_bilgi tablosundan da tel ve cocuk sayisini yazdirin  
------------------------------------------------------------------------------*/
  /* SUTUN BIRLERSTIRME set operator 
     tablo birlestirme join */
SELECT sehir as sehir_tel, maas as maas_cocuk_sayisi
FROM persone
WHERE id='123456789'
UNION
SELECT tel, cocuk_sayisi
FROM personel_bilgi
WHERE id='123456789';
/* sehir ve tel . maas ve cocuk ayni sutunda birlestigi icin data turleri uygun
olmalidir */

 
/*========================= SET OPERATORLERI: INTERSECT ========================
    
    INTERSECT operarotu 2 veya daha fazla Sorgu ifadesinin sonuclarini 
    dondurmek icin kullanilir. Ancak, intersect SADECE tum sorgularin ortak 
    verilerini (kesimlerini) dondurur. 
    
    Syntax:
    ----------
    SELECT sutun_adi,sutun_adi2, .. FROM tablo_adi1
    INTERESCT
    SELECT sutun_adi1, sutun_adi2, .. FROM tablo_adi2;
    
==============================================================================*/
/* -----------------------------------------------------------------------------
  ORNEK5: Personel tablosundan Istanbul veya Ankara’da calisanlarin id’lerini
  sorgulayiniz. 
 
  Personel_bilgi tablosundan 2 veya 3 cocugu olanlarin id lerini sorgulayiniz.
  Bu iki sorguyu INTERSECT ile birlesitiriniz.
------------------------------------------------------------------------------*/
SELECT id FROM persone
WHERE sehir IN('Istanbul','Ankara')
INTERSECT
SELECT id FROM personel_bilgi
WHERE cocuk_sayisi IN (2,3);

/* -----------------------------------------------------------------------------
  ORNEK6: Honda,Ford ve Tofas’ta calisan ortak isimde personel varsa listeleyin
------------------------------------------------------------------------------*/
SELECT isim FROM persone
WHERE sirket='Honda'
INTERSECT
SELECT isim FROM persone
WHERE sirket='Ford'
INTERSECT
SELECT isim FROM persone
WHERE sirket='Tofas';
/*========================= SET OPERATORLERI: MINUS ============================
    
    MINUS operatoru ilk Sorgu ifadesinde olup da diger sorgu ifadesinde olmayan 
    verileri dondurur. Yani 1. sorgu ile 2. sorgu arasindaki farkl? olanlar? 
    dondurur
    
    
    Syntax:
    ----------
    SELECT sutun_adi,sutun_adi2, .. FROM tablo_adi1
    MINUS
    SELECT sutun_adi1, sutun_adi2, .. FROM tablo_adi2;
    
==============================================================================*/
/* -----------------------------------------------------------------------------
  ORNEK7: 5000’den az maas alan ve Honda calisani olmayanlar?n bilgilerini
  listeleyen bir sorgu yaziniz. 
------------------------------------------------------------------------------*/
SELECT isim,maas,sirket
FROM persone
Where maas<5000
INTERSECT
SELECT isim,maas,sirket
FROM persone
WHERE sirket !='Honda';

SELECT isim,maas,sirket
FROM persone
Where maas<5000
MINUS
SELECT isim,maas,sirket
FROM persone
WHERE sirket ='Honda';

/* -----------------------------------------------------------------------------
  ORNEK8: Ismi Mehmet Ozturk olup Istanbul’da calismayanlarin isimlerini ve
  sehirlerini listeleyen sorguyu yaziniz.
------------------------------------------------------------------------------*/
SELECT isim,sehir,sirket
FROM persone
Where isim= 'Mehmet Ozturk'
MINUS
SELECT isim,sehir,sirket
FROM persone
WHERE sehir ='Istanbul';
